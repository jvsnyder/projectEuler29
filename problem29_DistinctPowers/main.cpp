#include <iostream>
#include "bigNumber.h"
#include <vector>
using namespace std;

int main() {
	/*

	Consider all integer combinations of ab for 2 ? a ? 5 and 2 ? b ? 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ? a ? 100 and 2 ? b ? 100?
	*/



	vector <std::string> resultList;
	bigNumber *num1;
	num1 = new bigNumber();
	string result = "";

	//to the power
	for (int a = 2; a <= 100; a++)
	{
		for (int b = 2; b <= 100; b++)
		{
	
		result = to_string(a);
		num1->setBigNumber(result);
		for (int multNdxB = 1; multNdxB < b; multNdxB++)
		{
			for (int multNdxA = 1; multNdxA < a; multNdxA++)
			{
				result = num1->addBy(result);
			}
			num1->setBigNumber(result);
		}
		/*if (std::find(resultList.begin(), resultList.end(), result) == resultList.end())
		{*/
			resultList.push_back(result);
		//}

		}
		


		cout << "a: " << a << endl;
		cout << "How many distinct terms: " << resultList.size() << endl;
	}
	
	int count = 0;
	int resultListSize = resultList.size();
	for (int ndx = 0; ndx < resultListSize; ndx++)
	{
		//grab the first
		result = resultList[0];
		resultList.erase(resultList.begin());
		if (std::find(resultList.begin(), resultList.end(), result) == resultList.end())
		{	
			count++;
		}
		cout << "resultList.size" << resultList.size() << endl;
	}

	//how many distinct terms
	cout << "How many distinct terms: "<<count;
	int hold;
	cin >> hold;

	return 0;
}